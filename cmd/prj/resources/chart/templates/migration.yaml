apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Release.Name }}-migration
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-migration
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          env:
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: PG_HOST
            - name: PG_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: PG_PORT
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $PG_HOST -p $PG_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: migration
          env:
            - name: PG_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: PG_URI
          image: postgres:latest
          command:
            - sh
            - "-c"
            - |
              psql $PG_URI <<'EOF'
                CREATE TABLE IF NOT EXISTS users (
                  id bigserial primary key,
                  username varchar,
                  first_name varchar,
                  last_name varchar,
                  email varchar,
                  password varchar
                );
                INSERT INTO users (username, first_name, last_name, email, password)
                  VALUES ('test', 'test_firstname', 'test_lastname', 'test@test', 'test')
                ON CONFLICT DO NOTHING;

                CREATE TABLE IF NOT EXISTS wallets (
                  user_id bigserial primary key,
                  crypto_amount float,
                  fiat_amount float
                );
                INSERT INTO wallets (crypto_amount, fiat_amount)
                  VALUES (1000.0, 1000.0)
                ON CONFLICT DO NOTHING;

                CREATE TABLE IF NOT EXISTS orders (
                  id bigserial primary key,
                  user_id bigserial,
                  type varchar,
                  crypto_amount float,
                  fiat_amount float,
                  status varchar
                );

                CREATE TABLE IF NOT EXISTS orders_processing (
                  id bigserial primary key,
                  order_id bigint,
                  steps_number int,
                  failed_steps int[] NOT NULL DEFAULT '{}'::int[]
                );

                CREATE TABLE IF NOT EXISTS notifications (
                  id bigserial primary key,
                  order_id bigint UNIQUE,
                  email varchar,
                  payload varchar,
                  status varchar
                );

                CREATE TABLE IF NOT EXISTS exchange_orders (
                  id bigserial primary key,
                  uuid varchar,
                  acquirer_user_id bigint,
                  order_id bigint,
                  type varchar,
                  crypto_amount float,
                  fiat_amount float,
                  compensate bool,
                  status varchar
                );

                CREATE TABLE IF NOT EXISTS bcgateway_orders (
                  id bigserial primary key,
                  uuid varchar,
                  acquirer_user_id bigint,
                  order_id bigint,
                  crypto_amount float,
                  compensate bool,
                  status varchar
                );
              EOF
  backoffLimit: 2